#ifndef MAIN_H
#define MAIN_H

char *_memcpy(char *dest, char *src, unsigned int n);
char *_memset(char *s, char b, unsigned int n);
char *_strcat(char *dest, char *src);
char *_strchr(char *s, char c);
char *_strcpy(char *dest, char *src);
char *_strncat(char *dest, char *src, int n);
char *_strncpy(char *dest, char *src, int n);
char *_strpbrk(char *s, char *accept);
char *_strstr(char *haystack, char *needle);
char *after_asterisk(char *s2);
char *cap_string(char *);
char *infinite_add(char *n1, char *n2, char *r, int size_r);
char *leet(char *s);
char *next_non_asterisk(char *s1, char c);
char *rot13(char *s);
char *str_adder(char *s1, char *s2, int size_r);
char *string_toupper(char *s);
int _abs(int n);
int _atoi(char *s);
int _is_prime(int dividend, int divisor);
int _isalpha(int c);
int _isdigit(int c);
int _islower(int c);
int _isupper(int c);
int _pow_recursion(int x, int y);
int _putchar(char c);
int _sqrt(int dividend, int divisor);
int _sqrt_recursion(int n);
int _strcmp(char *s1, char *s2);
int _strlen(char *s);
int _strlen_recursion(char *s);
int add(int a, int b);
int factorial(int n);
int find_sign(char *s);
int idx_num_starts(char *s);
int is_it_palindrome(char *s1, char *s2, int n, int len);
int is_palindrome(char *s);
int is_prime_number(int n);
int mul(int a, int b);
int print_last_digit(int n);
int print_sign(int n);
int pwr(int base, int index);
int strnum_int(char c);
int strnumsum2int(char c1, char c2);
int w_separator(char c);
int wildcmp(char *s1, char *s2);
unsigned int _strspn(char *s, char *accept);
void _print_rev_recursion(char *s);
void _puts(char *str);
void _puts_recursion(char *s);
void jack_bauer(void);
void leet_map(char *c);
void more_numbers(void);
void print_alphabet(void);
void print_alphabet_x10(void);
void print_array(int *a, int n);
void print_chessboard(char (*a)[8]);
void print_diagonal(int n);
void print_diagsums(int *a, int size);
void print_line(int n);
void print_most_numbers(void);
void print_negative(int n);
void print_number(int n);
void print_numbers(void);
void print_positive(int n);
void print_rev(char *s);
void print_square(int size);
void print_times_table(int n);
void print_to_98(int n);
void print_triangle(int size);
void puts2(char *str);
void puts_half(char *str);
void reset_to_98(int *n);
void rev_string(char *s);
void reverse_array(int *a, int n);
void rot13_map(char *c);
void set_string(char **s, char *to);
void swap_int(int *a, int *b);
void times_table(void);
char *create_array(unsigned int size, char c);
char *_strdup(char *str);
char *str_concat(char *s1, char *s2);
int **alloc_grid(int width, int height);
void free_grid(int **grid, int height);
char *argstostr(int ac, char **av);
char **strtow(char *str);
void *malloc_checked(unsigned int b);
char *string_nconcat(char *s1, char *s2, unsigned int n);
void *_calloc(unsigned int nmemb, unsigned int size);
int *array_range(int min, int max);
void *_realloc(void *ptr, unsigned int old_size, unsigned int new_size);
void _memncpy(void *dest, void *src, unsigned int n);
char *add_rev_str(char *str1, char *str2, int len1);
int _atoi2(char c);
char *strdup2(char *str);
char *rev_add_rev(char *s1, char *s2);




#endif /* MAIN_H */
